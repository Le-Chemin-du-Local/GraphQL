// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	model "chemin-du-local.bzh/graphql/graph/model"
	mock "github.com/stretchr/testify/mock"
)

// CommerceCommandsService is an autogenerated mock type for the CommerceCommandsService type
type CommerceCommandsService struct {
	mock.Mock
}

// GetUser provides a mock function with given fields: commerceCommandID
func (_m *CommerceCommandsService) GetUser(commerceCommandID string) (*model.User, error) {
	ret := _m.Called(commerceCommandID)

	var r0 *model.User
	if rf, ok := ret.Get(0).(func(string) *model.User); ok {
		r0 = rf(commerceCommandID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(commerceCommandID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewCommerceCommandsService interface {
	mock.TestingT
	Cleanup(func())
}

// NewCommerceCommandsService creates a new instance of CommerceCommandsService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCommerceCommandsService(t mockConstructorTestingTNewCommerceCommandsService) *CommerceCommandsService {
	mock := &CommerceCommandsService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
